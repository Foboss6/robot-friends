{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","inputChange","className","type","placeholder","onChange","Card","id","name","username","email","alt","src","CardList","cards","robots","map","user","Scroll","props","children","App","onInputChange","event","setState","searchfield","target","value","state","buttonClick","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAeeA,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAClB,OACE,mCACE,uBACEC,UAAU,uCACVC,KAAK,SACLC,YAAY,eACZC,SAAUJ,OCMHK,EAbH,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACjC,OACE,sBAAKR,UAAU,qDAAf,UACA,qBAAKS,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,oBAClB,sBAAKL,UAAU,KAAf,UACE,6BAAKM,IACL,oBAAGN,UAAU,IAAb,cAAmBO,EAAnB,OACA,mBAAGP,UAAU,IAAb,SAAkBQ,WCKXG,EAXE,SAAC,GAAc,IACxBC,EADuB,EAAZC,OACIC,KAAI,SAACC,GACxB,OAAO,cAAC,EAAD,CAAoBV,GAAIU,EAAKV,GAAIC,KAAMS,EAAKT,KAAMC,SAAUQ,EAAKT,KAAME,MAAOO,EAAKP,OAAxEO,EAAKV,OAEzB,OACE,8BACGO,KCEQI,G,MARA,SAACC,GACd,OACE,qBAAKjB,UAAU,YAAf,SACGiB,EAAMC,aCkDEC,G,wDAjDb,aAAe,IAAD,8BACZ,gBAcFC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,GACbI,aAAa,GALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GAAD,OAAS,EAAKV,SAAS,CAACT,OAAQmB,S,oBAOxC,WAAU,IAAD,OACDC,EAAiBC,KAAKR,MAAMb,OAAOsB,QAAO,SAAAC,GAC9C,OAAOA,EAAM9B,KAAK+B,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,kBAGlE,OAAQH,KAAKR,MAAMb,OAAO0B,OAQxB,8BACA,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,SAAd,yBACA,cAAC,EAAD,CAAWD,YAAamC,KAAKd,gBAE7B,oBAAGpB,UAAU,YAAb,mCACyBkC,KAAKR,MAAMb,OAAO0B,OAD3C,0BAC0EN,EAAeM,OADzF,OAGA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoB,WAftB,qBAAKjC,UAAU,KAAf,SACE,oBAAIA,UAAU,SAAd,8B,GA5BUwC,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.5f6ef9ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({inputChange}) => {\r\n  return (\r\n    <>\r\n      <input \r\n        className='pa2 ba br2 b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder='Search robot'\r\n        onChange={inputChange} \r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card =({ id, name, username, email}) => {\r\n  return (\r\n    <div className='tc bg-dark-green dib br3 pa2 ma2 grow bw2 shadow-5'>\r\n    <img alt='robot' src={`https://robohash.org/${id}3?size=200x200`}/>\r\n      <div className='tc'>\r\n        <h2>{name}</h2>\r\n        <p className='b'>'{username}'</p>\r\n        <p className='i'>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  const cards = robots.map((user) => {\r\n    return <Card key={user.id} id={user.id} name={user.name} username={user.name} email={user.email}/>\r\n  })\r\n  return (\r\n    <div>\r\n      {cards}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport '../components/Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className='scrolling'>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n      buttonClick: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then((users)=>this.setState({robots: users}));\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({searchfield: event.target.value});\r\n  }\r\n\r\n  render (){\r\n    const filteredRobots = this.state.robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    });\r\n\r\n    return !this.state.robots.length ?\r\n    (\r\n      <div className='tc'>\r\n        <h1 className='header'>LOADING...</h1>\r\n      </div> \r\n    )\r\n    :\r\n    (\r\n      <div>\r\n      <div className='tc'>\r\n        <h1 className='header'>ROBOFRIENDS</h1>\r\n        <SearchBox inputChange={this.onInputChange}/>\r\n        {/* <Button onPress={this.onButtonClick}/> */}\r\n        <p className='i numbers'>\r\n          Totoal robots number: {this.state.robots.length}, Found robots number: {filteredRobots.length}.\r\n        </p>\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n// CSS styles\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}